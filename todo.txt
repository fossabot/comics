- Perl: use feature qw(signatures); no warnings qw(experimental::signatures);

- rework variables available for templates: standardize names, pick decent
  names, DRY up them up, generate them in one place, document them

- twitter with @someone does not get tweeted for some reason

- backlog: list comics under series headings (hideable?)

- don't post to reddit / don't tweet a link, if the link is dead (slow
  web server?)

- define comic order by refering the previous or next comic, instead of
  having a date, so that inserting one for current events doesn't ripple
  through the backlog (and still maintaining a regular / weekly schedule)

- break up code into different (pluggable?) modules, e.g., reddit poster,
  inkscape importer

- internal archive with published dates and (source svg) file names and
  comic counts (maybe a matter of the template only)

- allow adding (invisible) watermarks

- transcript needs to check all frames for ordering, not just rows; that
  should get rid of space padding in texts

- email current comic when publishing

- handle more frame varieties, e.g., long frame over 2 rows on the side

- add "previously published in ..." link to the bottom of the page

- comics by series pages / links (can a comic be in more than one series?
  (why not?))

- prev next first last buttons per series

- spellcheck (but that's already available in Inkscape anyway, but at the
  Perl level we know the language to check with)

- tags under each comics, as hyperlinks to the tag cloud

- tag cloud (see https://www.w3.org/TR/html5/common-idioms.html#tag-clouds)
  or comics by tag pages

- export svg instead of png (for a truly fluent / responsive web design),
  but would also need to offer the font for download, I guess? or chop the
  svgs or pngs up per frame (ugly, relies on either table-based HTML layout,
  CSS magic beyond my skills, or chopping comics by rows only)

- minimize svg file sizes (e.g., with svgo), if svg export is supported

- generate latex code for pdf, or generarte pdf right away

- liner notes with comments in pdf, suck in other interesting documentation.
  This can pull stats per comics from git: how long between creation and
  publication, how long was the backlog each Fri, how big was the ideas file
  each week, how often was the comic changed (after being published).

- sizemap should have colors depending on where the comic was published

- add a thumbnail / preview for really large images (posters), especially in
  RSS

- cleanup hard-coded names, e.g., "Rahmen" or even "Meta", "generated"

- check for date holes (why? are those bad? only in the future? but I could
  schedule a xmas or Fri 13 comic ahead of time and then have holes and
  that's ok); warn in backlog if no comic for next Friday

- more social media: Mastodon, Openbook, Ello, Diaspora, inrupt.com
  (via Zapier?)

- use a configuration file to avoid passing lots of parameters

- use inkscape shell to export in bulk (could be faster than creating
  multiple inkscape processes), would be great to avoid writing temp svg
  files if inkscape accepts the svg on stdin

- publish on CPAN, add badge to README.md like this for Minilla:
  [![MetaCPAN Release](https://badge.fury.io/pl/Minilla.svg)](https://metacpan.org/release/Minilla)
  https://badge.fury.io/for/pl

- check: published date must be >= created date (typo?)

- profile and fix slooooow handling of some (large?) svg files; debug
  hiccups when it seems to stall for minutes (when cache is stale, but looks
  like frame collection could be the problem, not actually calling inkscape)

- check that speaker names all show up in the "who" meta data (but be
  careful about additional text, like "Paul, opening a beer:")

- write qr code file only when writing the pngs, i.e., when the source has
  changed (only need this if the generated title / qr code file name has
  changed, but this is harder to detect)

- don't bail out after the first check fails, report all problems

- speed up with multiple threads for checking and converting svg files (1
  thread per comic, then wait till all are done; reuse threads for writing
  per-comic pages, when all next/prev links are known)

- cache more data, like png sizes, transcript, and frame positions?

- mark cache as dirty if comic fails a check, so that you don't have to
  manually touch the svg: cache files should get written only after all
  checks have passed, and then a re-run doesn't try to use bad / incomplete
  cache files

- verbose and debug flags to print what's going on (helpful for configurable
  checks and actions)

- switch Twitter module to Twitter::API

- check 2FA for Reddit and Twitter

- optimization: when modifying only the latest comic (or an unpublished
  comic), don't recreate all html pages (only if the latest comic file name
  (title) changes, links need to get updated). This should speed up final
  touches on the comic.

- defect: don't remove spaces in tags
